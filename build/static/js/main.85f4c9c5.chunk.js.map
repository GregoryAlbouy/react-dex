{"version":3,"sources":["components/Avatar.jsx","components/TypeTag.jsx","util/Format.js","components/Card.jsx","components/Loader.jsx","components/CardList.jsx","components/FormSlider.jsx","components/TypeTagButton.jsx","components/FilterBox.jsx","components/Header.jsx","util/API.js","util/Reduce.js","App.js","index.js"],"names":["Avatar","props","className","src","url","alt","name","TypeTag","typeName","StatEnum","hp","attack","defense","speed","formatStat","stat","value","formatType","type","pkmnDetails","details","rawStats","rawTypes","id","types","stats","weight","height","sprites","map","sprite","Card","i","number","replace","firstLetter","toUpperCase","key","Loader","CardList","isReady","list","length","pkmn","FormSlider","useState","setValue","min","max","onChange","event","currentTarget","handleChange","TypeTagButton","element","useRef","ref","onClick","current","TYPES","FilterBox","handleFilterChange","filterType","updatedFilters","filters","setFilters","handleTypeTagButtonClick","slots","selectedTags","includes","classList","add","erasedValue","parentNode","childNodes","forEach","el","contains","remove","addToSelection","setSelectedTags","isOpen","setIsOpen","gen","setGen","useEffect","onSubmit","placeholder","isButton","Object","keys","statEnumKey","Header","getPkmnDetails","a","fetch","json","getPkmnList","results","statSum","array","valueGetter","getValue","x","reduce","acc","curr","arraySum","hasTypes","App","state","contentIsLoaded","defaultList","currentList","handleFilters","genSteps","filterEnum","att","def","sAtt","sDef","spe","Reduce","g","Number","parseInt","filterFunctions","filterName","filteredList","filter","setState","this","setList","attachPkmnDetails","API","Format","Promise","all","detailledList","href","title","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85f4c9c5.chunk.js","sourcesContent":["import './Avatar.scss';\nimport React from 'react';\n\nconst Avatar = (props) => (\n  <div className=\"img-container\">\n    <img src={props.url} alt={props.name} />\n  </div>\n);\n \nexport default Avatar;","import './TypeTag.scss';\nimport React from 'react';\n\nconst TypeTag = (props) => <span className={`type-tag ${props.typeName}`}>{props.typeName}</span>;\n\nexport default TypeTag;","export const pkmnName = (name) => (\n  name.replace(/^([a-z])/, (firstLetter) => firstLetter.toUpperCase())\n);\n\nexport const pkmnID = (i) => i < 10 ? `00${i}`\n                                    : i < 100 ? `0${i}`\n                                              : i;\n\nexport const StatEnum = {\n  hp: 'hp',\n  attack: 'att',\n  defense: 'def',\n  'special-attack': 'sAtt',\n  'special-defense': 'sDef',\n  speed: 'spe'\n};\n\nconst formatStat = (stat) => ({\n  name: StatEnum[stat.stat.name],\n  value: stat['base_stat']\n});\n\nconst formatType = (type) => type.type.name;\n\nexport const pkmnStatsFromArray = (rawStats) => rawStats.map(formatStat);\n\nexport const pkmnTypesfromArray = (rawTypes) => rawTypes.map(formatType);\n\nexport const pkmnDetails = (details) => {\n  const { id, name, types, stats, weight, height, sprites } = details;\n\n  return {\n    id,\n    name,\n    types: pkmnTypesfromArray(types),\n    stats: pkmnStatsFromArray(stats),\n    weight,\n    height,\n    sprite: sprites['front_default'] }\n};","import './Card.scss';\nimport React from 'react';\nimport Avatar from './Avatar';\nimport TypeTag from './TypeTag';\nimport * as Format from '../util/Format';\n\nconst Card = (props) => (\n  <li className=\"card\">\n    <h3>\n      <span className=\"number\">#{Format.pkmnID(props.number)}</span>\n      <span className=\"name\">{Format.pkmnName(props.name)}</span>\n    </h3>\n\n    <p className=\"types\">\n      {props.types.map((type, i) => <TypeTag typeName={type} key={i}>{type}</TypeTag>)}\n    </p>\n\n    <Avatar url={props.sprite} name={props.name}/>\n\n  </li>\n);\n\nexport default Card;","import './Loader.scss';\nimport React from 'react';\n\nconst Loader = () => <div className=\"loader\"></div>;\n\nexport default Loader;","import './CardList.scss';\nimport Card from './Card';\nimport React from 'react';\nimport Loader from './Loader';\n\nconst CardList = (props) => {\n  const showList = () => props.list.length !== 0 ?\n    <ul className=\"card-list\">\n      {props.list.map((pkmn, i) => (\n        <Card\n          key={i}\n          number={pkmn.id}\n          name={pkmn.name}\n          sprite={pkmn.sprite}\n          stats={pkmn.stats}\n          weight={pkmn.weight}\n          height={pkmn.height}\n          types={pkmn.types}\n        />\n      ))}\n    </ul>\n\n    : <p className=\"no-match-message\">Not even a nibble...</p>;\n\n  return props.isReady ? showList() : <Loader />;\n}\n \nexport default CardList;","import'./FormSlider.scss';\nimport React, { useState } from 'react';\n\nconst FormSlider = (props) => {\n  const handleChange = (event) => {\n    setValue(event.currentTarget.value);\n    props.handleChange(event);\n  };\n\n  const [value, setValue] = useState(0);\n\n  return (\n    <input\n      className=\"form-slider\"\n      type=\"range\"\n      min=\"0\"\n      max={props.max}\n      value={value}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default FormSlider;","import './TypeTag.scss';\nimport React, { useRef } from 'react';\n\nconst TypeTagButton = (props) => {\n\n  const element = useRef(null);\n\n  const handleClick = () => {\n    props.onClick(props.typeName, element.current);\n  };\n\n    return (\n      <span\n        ref={element}\n        className={`type-tag ${props.typeName} disabled`}\n        onClick={handleClick}\n      >\n        {props.typeName}\n      </span>\n    );\n};\n\nexport default TypeTagButton;","import './FilterBox.scss';\nimport React, { useState, useEffect } from 'react';\nimport FormSlider from './FormSlider';\nimport TypeTagButton from './TypeTagButton'\nimport { StatEnum } from '../util/Format';\n\nconst TYPES = [ 'normal', 'fighting', 'flying', 'poison', 'ground', 'rock',\n                'bug', 'ghost', 'steel', 'fire', 'water', 'grass', 'electric',\n                'psychic', 'ice', 'dragon', 'dark', 'fairy' ];\n\nconst MAX_STAT_VALUE = 255;\n// const STATS_QUANTITY = Object.keys(StatEnum).length;\n// const STATS_SUM_MAX_VALUE = MAX_STAT_VALUE * STATS_QUANTITY\n\nconst FilterBox = (props) => {\n\n  const submitFilters = () => {\n    props.onSubmit(filters)\n  };\n\n  const handleFilterChange = (event, filterType) => {\n    const updatedFilters = { ...filters };\n    updatedFilters[filterType] = event.currentTarget.value;\n    setFilters(updatedFilters)\n  };\n\n  const handleGenChange = (event) => {\n    setGen(event.currentTarget.value)\n    handleFilterChange(event, 'gen')\n  };\n\n  const handleTypeTagButtonClick = (typeName, element) => {\n    const slots = [...selectedTags];\n    \n    const addToSelection = () => {\n      if (!slots[0]) slots[0] = typeName;\n\n      else {\n        const erasedValue = slots[1];\n        slots[1] = typeName;\n\n        if (erasedValue !== '') {\n          element.parentNode.childNodes.forEach((el) => {\n            if (el.classList.contains(erasedValue)) el.classList.add('disabled');\n          })\n        }\n      }\n      \n      element.classList.remove('disabled');\n    };\n\n    const removeFromSelection = () => {\n      if (slots[0] === typeName) {\n        slots[0] = slots[1];\n        slots[1] = '';\n      } else if (slots[1] === typeName) {\n        slots[1] = '';\n      }\n\n      element.classList.add('disabled');\n    };\n\n    slots.includes(typeName) ? removeFromSelection() : addToSelection();\n\n    setSelectedTags(slots);\n    setFilters({ ...filters, types: slots });\n  };\n\n  const renderStatFilterInput = (statEnumKey, i) => (\n    <label key={i} className=\"stat-input\">\n      <FormSlider\n        max={MAX_STAT_VALUE}\n        handleChange={(event) => handleFilterChange(event, StatEnum[statEnumKey])}\n      />\n      <span>{statEnumKey}</span>\n    </label>\n  );\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [gen, setGen] = useState(1);\n\n  const [filters, setFilters] = useState({});\n  useEffect(submitFilters, [filters]);\n\n  const [selectedTags, setSelectedTags] = useState(['', '']);\n\n  return (\n    <div className={`filter-box ${isOpen ? 'open' : ''}`}>\n      <form>\n        <fieldset>\n          <legend>General filters</legend>\n\n          <input type=\"text\" className=\"input-name\" placeholder=\"Name...\" onChange={(event) => handleFilterChange(event, 'name')} />\n\n          <select className=\"select-gen\" onChange={handleGenChange} value={gen}>\n            <option value=\"1\">Gen 1</option>\n            <option value=\"2\">Gen 2</option>\n            <option value=\"3\">Gen 3</option>\n            <option value=\"4\">Gen 4</option>\n            <option value=\"5\">Gen 5</option>\n            <option value=\"6\">Gen 6</option>\n            <option value=\"7\">Gen 7</option>\n            <option value=\"0\">Gotta catch 'em all!</option>\n          </select>\n        </fieldset>\n\n        <fieldset>\n          <legend>By type</legend>\n\n          <div className=\"types-container\">\n            {TYPES.map((typeName, i) => <TypeTagButton key={i} onClick={handleTypeTagButtonClick} typeName={typeName} isButton={true}/>)}\n          </div>\n        </fieldset>\n\n        <fieldset>\n          <legend>By stat min. value</legend>\n\n          {Object.keys(StatEnum).map(renderStatFilterInput)}\n        </fieldset>\n      </form>\n      \n      <button className=\"toggle-btn\" onClick={() => setIsOpen(!isOpen)}>filters</button>\n    </div>\n  );\n};\n \nexport default FilterBox;","import './Header.scss';\nimport React from 'react';\n\nconst Header = () => (\n    <header className=\"header\">\n        <h1>React-dex</h1>\n        <h2>React + PokeAPI</h2>\n    </header>\n);\n\nexport default Header;","const PKMN_LIST_URL = 'https://pokeapi.co/api/v2/pokemon?limit=807';\n\nexport const getPkmnDetails = async (url) => (await fetch(url)).json();\n\nexport const getPkmnList = async () => (await getPkmnDetails(PKMN_LIST_URL)).results;","export const arraySum = (array, valueGetter) => {\n    const getValue = !valueGetter ? (x) => x : valueGetter;\n\n    return array.reduce((acc, curr) => acc + getValue(curr), 0);\n}\n\nexport const statSum = (stats) => arraySum(stats, (stat) => stat.value);\n\nexport const hasTypes = (pkmn, types) => types.reduce((acc, curr) => acc && (pkmn.types.includes(curr) || !curr), true);","import React, { Component } from 'react';\nimport './App.scss';\nimport CardList from './components/CardList';\nimport FilterBox from './components/FilterBox';\nimport Header from './components/Header';\nimport * as API from './util/API';\nimport * as Reduce from './util/Reduce';\nimport * as Format from './util/Format';\n\nclass App extends Component {\n  state = {\n    contentIsLoaded: false,\n    defaultList: [],\n    currentList: [],\n  };\n\n  componentDidMount() {\n    this.setList();\n  }\n\n  async setList() {\n    const attachPkmnDetails = async (pkmn) => {\n      const details = await API.getPkmnDetails(pkmn.url);\n      \n      return Format.pkmnDetails(details);\n    };\n    \n    const list = await API.getPkmnList();\n    const detailledList = await Promise.all(list.map(attachPkmnDetails));\n    \n    this.setState({\n      defaultList: detailledList,\n      currentList: detailledList.filter(pkmn => pkmn.id <= 151),\n      contentIsLoaded: true\n    });\n  }\n\n  handleFilters = (filters) => {\n    const list = [ ...this.state.defaultList ];\n\n    const genSteps = [0, 151, 251, 386, 494, 649, 721, 807];\n\n    const filterEnum = {\n      name: (pkmn) => pkmn.name.includes(filters.name),\n      hp: (pkmn) => pkmn.stats[0].value >= filters.hp,\n      att: (pkmn) => pkmn.stats[1].value >= filters.att,\n      def: (pkmn) => pkmn.stats[2].value >= filters.def,\n      sAtt: (pkmn) => pkmn.stats[3].value >= filters.sAtt,\n      sDef: (pkmn) => pkmn.stats[4].value >= filters.sDef,\n      spe: (pkmn) => pkmn.stats[5].value >= filters.spe,\n      statSum: (pkmn) => Reduce.statSum(pkmn.stats) >= filters.statSum,\n      types: (pkmn) => Reduce.hasTypes(pkmn, filters.types),\n      gen: (pkmn) => {\n        const g = Number.parseInt(filters.gen);\n        const id = Number.parseInt(pkmn.id);\n\n        return g === 0 || (id > genSteps[g-1] && id <= genSteps[g]);\n      }\n    };\n\n    const applyFilters = (pkmn) => {\n      const truthyValues = (acc, curr) => acc && curr(pkmn);\n\n      return filterFunctions.reduce(truthyValues, filterFunctions[0]);\n    }\n\n    const filterFunctions = Object.keys(filters).map((filterName) => filterEnum[filterName]);\n    const filteredList = list.filter(applyFilters);\n\n    this.setState({ currentList: filteredList });\n  };\n\n  render() {\n    return (\n      <>\n        <Header />\n        <FilterBox onSubmit={this.handleFilters}  />\n        <CardList list={this.state.currentList} isReady={this.state.contentIsLoaded} />\n        <div className=\"github\">\n          <a href=\"https://github.com/gregoryalbouy/react-dex\" title=\"Github\">github</a>\n          <img src=\"./assets/github.svg\" alt=\"Github\" />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;","import './index.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}