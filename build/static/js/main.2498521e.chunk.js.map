{"version":3,"sources":["components/Avatar.jsx","components/TypeTag.jsx","util/Format.js","components/Card.jsx","components/Loader.jsx","components/CardList.jsx","components/FormSlider.jsx","components/TypeTagButton.jsx","components/FilterBox.jsx","components/Header.jsx","util/API.js","util/Reduce.js","App.js","index.js"],"names":["Avatar","props","className","src","url","alt","name","TypeTag","typeName","StatEnum","hp","attack","defense","speed","pkmnDetails","details","rawStats","rawTypes","id","types","stats","weight","height","sprites","map","type","stat","value","sprite","Card","i","number","replace","firstLetter","toUpperCase","key","Loader","CardList","isReady","list","length","pkmn","FormSlider","useState","setValue","min","max","onChange","event","currentTarget","handleChange","TypeTagButton","element","useRef","ref","onClick","current","TYPES","FilterBox","handleFilterChange","filterType","updatedFilters","filters","setFilters","handleTypeTagButtonClick","slots","selectedTags","includes","classList","add","erasedValue","parentNode","childNodes","forEach","el","contains","remove","addToSelection","setSelectedTags","isOpen","setIsOpen","gen","setGen","useEffect","onSubmit","placeholder","isButton","Object","keys","statEnumKey","Header","getPkmnDetails","a","fetch","json","getPkmnList","results","statSum","array","valueGetter","getValue","x","reduce","acc","curr","arraySum","hasTypes","App","state","contentIsLoaded","defaultList","currentList","handleFilters","genSteps","filterEnum","att","def","sAtt","sDef","spe","Reduce","g","Number","parseInt","filterFunctions","filterName","filteredList","filter","setState","this","setList","attachPkmnDetails","API","Format","Promise","all","detailledList","href","title","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2498521e.chunk.js","sourcesContent":["import React from 'react';\nimport './Avatar.scss';\n\nconst Avatar = (props) => (\n  <div className=\"img-container\">\n    <img src={props.url} alt={props.name} />\n  </div>\n);\n \nexport default Avatar;","import './TypeTag.scss'\nimport React from 'react';\n\nconst TypeTag = (props) => <span className={`type-tag ${props.typeName}`}>{props.typeName}</span>;\n\nexport default TypeTag;","export const pkmnName = (name) => {\n  return name.replace(/^([a-z])/, (firstLetter) => firstLetter.toUpperCase())\n}\n\nexport const pkmnID = (i) => {\n  return i < 10\n    ? `00${i}`\n    : i < 100\n      ? `0${i}`\n      : i\n}\n\nexport const StatEnum = {\n  hp: 'hp',\n  attack: 'att',\n  defense: 'def',\n  'special-attack':'sAtt',\n  'special-defense': 'sDef',\n  speed: 'spe'\n}\n\nexport const pkmnStatsFromArray = (rawStats) => {\n  const formattedStats = rawStats.map((stat) => ({\n      name: StatEnum[stat.stat.name],\n      value: stat['base_stat']\n  }))\n\n  return formattedStats\n}\n\nexport const pkmnTypesfromArray = (rawTypes) => rawTypes.map((type) => type.type.name)\n\nexport const pkmnDetails = (details) => {\n  const { id, name, types, stats, weight, height, sprites } = details\n\n  return {\n    id,\n    name,\n    types: pkmnTypesfromArray(types),\n    stats: pkmnStatsFromArray(stats),\n    // stats,\n    weight,\n    height,\n    sprite: sprites['front_default'] }\n}","import React from 'react';\nimport Avatar from './Avatar';\nimport TypeTag from './TypeTag';\nimport * as Format from '../util/Format';\nimport './Card.scss';\n\nconst Card = (props) => (\n  <li className=\"card\">\n    <h3>\n      <span className=\"number\">#{Format.pkmnID(props.number)}</span>\n      <span className=\"name\">{Format.pkmnName(props.name)}</span>\n    </h3>\n\n    <p className=\"types\">\n      {props.types.map((type, i) => <TypeTag typeName={type} key={i}>{type}</TypeTag>)}\n    </p>\n\n    <Avatar url={props.sprite} name={props.name}/>\n\n  </li>\n);\n\nexport default Card;","import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => <div className=\"loader\"></div>;\n\nexport default Loader;","import React from 'react';\nimport './CardList.scss';\nimport Card from './Card';\nimport Loader from './Loader';\n\nconst CardList = (props) => {\n  const showList = () => props.list.length !== 0 ?\n    <ul className=\"card-list\">\n      {props.list.map((pkmn, i) => (\n        <Card\n          key={i}\n          number={pkmn.id}\n          name={pkmn.name}\n          sprite={pkmn.sprite}\n          stats={pkmn.stats}\n          weight={pkmn.weight}\n          height={pkmn.height}\n          types={pkmn.types}\n        />\n      ))}\n    </ul>\n\n  : <p className=\"no-match-message\">Not even a nibble...</p>;\n\n  return props.isReady ? showList() : <Loader />;\n}\n \nexport default CardList;","import'./FormSlider.scss'\nimport React, { useState } from 'react';\n\nconst FormSlider = (props) => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event) => {\n    setValue(event.currentTarget.value);\n    props.handleChange(event);\n  };\n\n  return (\n    <input\n      className=\"form-slider\"\n      type=\"range\"\n      min=\"0\"\n      max={props.max}\n      value={value}\n      onChange={handleChange}\n    />\n  );\n} \n\nexport default FormSlider","import './TypeTag.scss';\nimport React, { useRef } from 'react';\n\nconst TypeTagButton = (props) => {\n\n  const element = useRef(null)\n\n  const handleClick = () => {\n    props.onClick(props.typeName, element.current)\n  }\n\n    return (\n      <span\n        ref={element}\n        className={`type-tag ${props.typeName} disabled`}\n        onClick={handleClick}\n      >\n        {props.typeName}\n      </span>\n    );\n}\n\nexport default TypeTagButton","import './FilterBox.scss';\nimport React, { useState, useEffect } from 'react';\nimport FormSlider from './FormSlider';\nimport TypeTagButton from './TypeTagButton'\nimport { StatEnum } from '../util/Format';\n\nconst TYPES = [ 'normal', 'fighting', 'flying', 'poison', 'ground', 'rock',\n                'bug', 'ghost', 'steel', 'fire', 'water', 'grass', 'electric',\n                'psychic', 'ice', 'dragon', 'dark', 'fairy' ];\n\nconst MAX_STAT_VALUE = 255;\n// const STATS_QUANTITY = Object.keys(StatEnum).length;\n// const STATS_SUM_MAX_VALUE = MAX_STAT_VALUE * STATS_QUANTITY\n\nconst FilterBox = (props) => {\n\n  const submitFilters = () => {\n    props.onSubmit(filters)\n  };\n\n  const handleFilterChange = (event, filterType) => {\n    const updatedFilters = { ...filters };\n    updatedFilters[filterType] = event.currentTarget.value;\n    setFilters(updatedFilters)\n  };\n\n  const renderStatFilterInput = (statEnumKey, i) => (\n    <label key={i} className=\"stat-input\">\n      <FormSlider\n        max={MAX_STAT_VALUE}\n        handleChange={(event) => handleFilterChange(event, StatEnum[statEnumKey])}\n      />\n      <span>{statEnumKey}</span>\n    </label>\n  )\n\n  const handleGenChange = (event) => {\n    setGen(event.currentTarget.value)\n    handleFilterChange(event, 'gen')\n  }\n\n  // change depending on hidden state, not class\n  const handleTypeTagButtonClick = (typeName, element) => {\n    const slots = [...selectedTags];\n    \n    const addToSelection = () => {\n      if (!slots[0]) slots[0] = typeName;\n\n      else {\n        const erasedValue = slots[1];\n        slots[1] = typeName\n\n        if (erasedValue !== '') {\n          element.parentNode.childNodes.forEach((el) => {\n            if (el.classList.contains(erasedValue)) el.classList.add('disabled')\n          })\n        }\n      }\n      \n      element.classList.remove('disabled');\n    };\n\n    const removeFromSelection = () => {\n      if (slots[0] === typeName) {\n        slots[0] = slots[1];\n        slots[1] = ''\n      } else if (slots[1] === typeName) {\n        slots[1] = '';\n      }\n\n      element.classList.add('disabled');\n    };\n\n    slots.includes(typeName) ? removeFromSelection() : addToSelection()\n\n    setSelectedTags(slots)\n    setFilters({ ...filters, types: slots })\n  }\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const [gen, setGen] = useState(1)\n\n  const [filters, setFilters] = useState({});\n  useEffect(submitFilters, [filters]);\n\n  const [selectedTags, setSelectedTags] = useState(['', ''])\n\n  return (\n    <div className={`filter-box ${isOpen ? 'open' : ''}`}>\n      <form>\n        <fieldset>\n          <legend>General filters</legend>\n\n          <input type=\"text\" className=\"input-name\" placeholder=\"Name...\" onChange={(event) => handleFilterChange(event, 'name')} />\n\n          <select className=\"select-gen\" onChange={handleGenChange} value={gen}>\n            <option value=\"1\">Gen 1</option>\n            <option value=\"2\">Gen 2</option>\n            <option value=\"3\">Gen 3</option>\n            <option value=\"4\">Gen 4</option>\n            <option value=\"5\">Gen 5</option>\n            <option value=\"6\">Gen 6</option>\n            <option value=\"7\">Gen 7</option>\n            <option value=\"0\">Gotta catch 'em all!</option>\n          </select>\n        </fieldset>\n\n        <fieldset>\n          <legend>By type</legend>\n\n            <div className=\"types-container\">\n              {TYPES.map((typeName, i) => <TypeTagButton key={i} onClick={handleTypeTagButtonClick} typeName={typeName} isButton={true}/>)}\n            </div>\n        </fieldset>\n\n        <fieldset>\n          <legend>By stat min. value</legend>\n\n          {Object.keys(StatEnum).map(renderStatFilterInput)}\n\n          {/* <label className=\"statInput\">\n            <FormSlider\n              max={STATS_SUM_MAX_VALUE}\n              handleChange={(event) => handleFilterChange(event, 'statSum')}\n            />\n            <span>total</span>\n          </label> */}\n        </fieldset>\n\n          {/*\n            <label>final form only / base form only</label> \n            <label>by gen</label>\n          */\n          }\n\n        {/* <fieldset>\n          <legend>sort</legend>\n          <label>type</label>\n          <label>basestat</label>\n          <label>final form / base form</label>\n        </fieldset> */}\n      </form>\n      <button className=\"toggle-btn\" onClick={() => setIsOpen(!isOpen)}>filters</button>\n    </div>\n  );\n}\n \nexport default FilterBox;","import './Header.scss'\nimport React from 'react';\n\nconst Header = () => (\n    <header className=\"header\">\n        <h1>React-dex</h1>\n        <h2>React + PokeAPI</h2>\n    </header>\n)\n\nexport default Header;","const PKMN_LIST_URL = 'https://pokeapi.co/api/v2/pokemon?limit=807';\n\nexport const getPkmnDetails = async (url) => (await fetch(url)).json();\n\nexport const getPkmnList = async () => (await getPkmnDetails(PKMN_LIST_URL)).results;\n\n// export const getPkmnDetails = (pkmn) => getJSON(pkmn.url);","export const arraySum = (array, valueGetter) => {\n    const getValue = !valueGetter ? (x) => x : valueGetter\n\n    return array.reduce((acc, curr) => acc + getValue(curr), 0)\n}\n\nexport const statSum = (stats) => arraySum(stats, (stat) => stat.value)\n\nexport const hasTypes = (pkmn, types) => types.reduce((acc, curr) => acc && (pkmn.types.includes(curr) || !curr), true)","import React, { Component } from 'react';\nimport './App.scss';\nimport CardList from './components/CardList';\nimport FilterBox from './components/FilterBox';\nimport Header from './components/Header';\nimport * as API from './util/API';\nimport * as Reduce from './util/Reduce';\nimport * as Format from './util/Format';\n\nclass App extends Component {\n  state = {\n    contentIsLoaded: false,\n    defaultList: [],\n    currentList: [],\n  };\n\n  componentDidMount() {\n    this.setList();\n  }\n\n  async setList() {\n    const attachPkmnDetails = async (pkmn) => {\n      const details = await API.getPkmnDetails(pkmn.url);\n      \n      return Format.pkmnDetails(details);\n    };\n    \n    const list = await API.getPkmnList();\n    const detailledList = await Promise.all(list.map(attachPkmnDetails));\n    \n    this.setState({\n      defaultList: detailledList,\n      currentList: detailledList.filter(pkmn => pkmn.id <= 151),\n      contentIsLoaded: true\n    });\n  }\n\n  handleFilters = (filters) => {\n    const list = [ ...this.state.defaultList ];\n\n    const genSteps = [0, 151, 251, 386, 494, 649, 721, 807];\n\n    const filterEnum = {\n      name: (pkmn) => pkmn.name.includes(filters.name),\n      hp: (pkmn) => pkmn.stats[0].value >= filters.hp,\n      att: (pkmn) => pkmn.stats[1].value >= filters.att,\n      def: (pkmn) => pkmn.stats[2].value >= filters.def,\n      sAtt: (pkmn) => pkmn.stats[3].value >= filters.sAtt,\n      sDef: (pkmn) => pkmn.stats[4].value >= filters.sDef,\n      spe: (pkmn) => pkmn.stats[5].value >= filters.spe,\n      statSum: (pkmn) => Reduce.statSum(pkmn.stats) >= filters.statSum,\n      types: (pkmn) => Reduce.hasTypes(pkmn, filters.types),\n      gen: (pkmn) => {\n        const g = Number.parseInt(filters.gen);\n        const id = Number.parseInt(pkmn.id)\n\n        return g === 0 || (id > genSteps[g-1] && id <= genSteps[g])\n      }\n    };\n\n    const applyFilters = (pkmn) => {\n      const truthyValues = (acc, curr) => acc && curr(pkmn);\n\n      return filterFunctions.reduce(truthyValues, filterFunctions[0]);\n    }\n\n    const filterFunctions = Object.keys(filters).map((filterName) => filterEnum[filterName]);\n    const filteredList = list.filter(applyFilters);\n\n    this.setState({ currentList: filteredList });\n\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <FilterBox onSubmit={this.handleFilters}  />\n        <CardList list={this.state.currentList} isReady={this.state.contentIsLoaded} />\n        <div className=\"github\">\n          <a href=\"https://github.com/gregoryalbouy/react-dex\" title=\"Github\">github</a>\n          <img src=\"./assets/github.svg\" alt=\"Github\" />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}